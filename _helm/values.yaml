replicaCount: 1
image:
  repository: microservices/config-service
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

activeProfiles: ""
timeZone: Asia/Ho_Chi_Minh
jvmOptions: -Xms1g -Xmx1g

keystore:
  enabled: false
  content: ""
  password: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: "8080"
  prometheus.io/path: '/actuator/prometheus'

podSecurityContext: { }
# fsGroup: 2000

securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true

service:
  type: ClusterIP
  httpPort: 8080
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: "8080"
    prometheus.io/path: '/actuator/prometheus'

resources:
  requests:
    cpu: 250m
    memory: 1380Mi
  limits:
    cpu: 1
    memory: 1380Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: { }
tolerations: [ ]
affinity: { }
